name: Publish on Docker Hub and Deploy

on:
    release:
        types: [published]
    # Запуск только при публиковании нового релиза

    # Можем запускать вручную из Actions tab
    workflow_dispatch:

jobs:
    #    run_tests:
    #        runs-on: [ubuntu-latest]
    #        steps:
    #            # Чекаутим код
    #            - uses: actions/checkout@v2
    #            - name: Install packages
    #              run: npm i
    #            - name: Run tests
    #              run: npm run validate

    build_and_pub:
        # Если тесты были пройдены успешно
        #        needs: [run_tests]
        runs-on: [ubuntu-latest]
        env:
            LOGIN: ${{ secrets.DOCKER_LOGIN }}
            NAME: ${{ secrets.DOCKER_NAME }}
            USER: ${{ secrets.USER }}
        steps:
            - name: Login to docker.io
                # Сначала мы логинимся в docker.io
              run:  echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
                # Чекаутим код
            - uses: actions/checkout@v2
            - name: Set env
              run: echo "RELEASE_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
            - name: Set env
              run: echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV
            - name: Make dist
              run: npm i && npm run build
            - name: Build image
                # Собираем image и называем его так как указано в hub.docker т.е. login/repository:version
              run: docker build -t $LOGIN/$NAME:${{ env.RELEASE_VERSION }}---${{ github.run_id }} -f Dockerfile .
            - name: Push image to docker.io
                # Пушим образ в registry
              run: docker push $LOGIN/$NAME:${{ env.RELEASE_VERSION }}---${{ github.run_id }}
            - name: run ssh command to deploy
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USER }}
                  key: ${{ secrets.SSH_KEY }}
                  script: cd /home/$USER/pocketanks &&
                          sed -i -E 's/:[^\/]+---[0-9]+$/:${{ env.RELEASE_VERSION }}---${{ github.run_id }}/' docker-compose.yml &&
                          docker-compose up --no-deps --build -d app

# docker-compose.yml
version: "3"

services:
    app:
        image: akkord/pocketanks:POCKET-TANKS-50-51---1477709277


        #        build:
#            context: .
        # Зависимость от сервиса postgres
        depends_on:
            - postgres
        env_file:
            - prod.env
        # Проброс порта так же, как в командной строке — на какой порт хоста какой порт контейнера
        ports:
            - "5000:5000"
        # Проброс файлов, откуда с хоста, куда в контейнер
#        volumes:
#            - ./shared:/var/www/shared
        # Важно добавить сеть всем сервисам, которые должны взаимодействовать между собой
        networks:
            - awesome
        restart: always
        command: ./wait-for.sh postgres:5432 -- node index.js

    postgres:
        image: postgres:12
        ports:
            - "5432:5432"
        volumes:
            - ./postgresdata:/var/lib/postgresql/data
            # Если у вас есть схема БД, которую можно подгрузить на старте, — передайте её
#            - ./src/migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
        restart: always
        env_file:
            - prod.env
        networks:
            - awesome

#    webserver:
#        image: nginx:mainline-alpine
#        container_name: webserver
#        restart: unless-stopped
#        ports:
#            - "80:80"
#        volumes:
##            - web-root:/var/www
#            - ./nginx-conf:/etc/nginx/conf.d
#            - certbot-etc:/etc/letsencrypt
#            - certbot-var:/var/lib/letsencrypt
#        depends_on:
#            - app
#        networks:
#            - awesome

#    certbot:
#        image: certbot/certbot
#        container_name: certbot
#        volumes:
#            - certbot-etc:/etc/letsencrypt
#            - certbot-var:/var/lib/letsencrypt
#        depends_on:
#            - webserver
#        command: certonly --webroot --webroot-path=/var/www --email andyshart@yandex.ru --agree-tos --no-eff-email --staging -d pocketanks.ru
#        networks:
#            - awesome

#volumes:
#    certbot-etc:
#    certbot-var:
#    web-root:


# Настройки созданной сети между сервисами
networks:
    awesome:
        driver: bridge

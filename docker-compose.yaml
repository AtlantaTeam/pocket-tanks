# docker-compose.yaml
version: "3"

services:
    app:
        # Этим ключом мы скажем docker-compose, чтобы он собирал докерфайл, который
        # находится в папке рядом с docker-compose.yaml
        build:
            context: .
        # Зависимость от сервиса postgres
        depends_on:
            - postgres
        env_file:
            - prod.env
        # Проброс порта так же, как в командной строке — на какой порт хоста какой порт контейнера
        ports:
            - "5000:5000"
            - "9229:9229"
        # Проброс файлов, откуда с хоста, куда в контейнер
#        volumes:
#            - ./shared:/var/www/shared
        # Важно добавить сеть всем сервисам, которые должны взаимодействовать между собой
        networks:
            - awesome
        restart: always
    #        command: ./wait-for.sh mongo:27017 -- npm run start

    postgres:
        image: postgres:12
        ports:
            - "5432:5432"
        volumes:
            - ./postgresdata:/var/lib/postgresql/data
            # Если у вас есть схема БД, которую можно подгрузить на старте, — передайте её
#            - ./src/migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
        restart: always
        env_file:
            - prod.env
        networks:
            - awesome

# Настройки созданной сети между сервисами
networks:
    awesome:
        driver: bridge
